{"version":3,"sources":["components/Header.jsx","components/Content.jsx","components/Footer.jsx","components/InfoPage.jsx","components/HighlightableText.jsx","components/ToggleButton.jsx","components/TypingGame.jsx","components/Playground.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Header","props","onClick","label","className","style","marginLeft","maxWidth","fontSize","type","Content","content","Footer","href","icon","faLinkedin","size","color","faGithub","faEnvelope","InfoPage","src","alt","display","flexWrap","justifyContent","title","width","height","flexShrink","marginBottom","marginRight","HighlightableText","children","start","end","left","substring","highlighted","right","ToggleButton","state","positionIsLeft","this","leftText","rightText","setState","textAlign","order","overflowX","cx","cy","r","stroke","strokeWidth","fill","React","Component","TEXT_LIST","capitalize","word","charAt","toUpperCase","slice","getText","min","max","length","Math","floor","random","TypingGame","isPlaying","index","text","words","input","timerOn","timerStart","timerEnd","isCapitalized","normalText","split","trimLeft","includes","checkCorrect","newText","getNewText","oldText","newNormalText","newWords","newEnd","map","join","trimRight","Date","now","capitalizedWords","capitalizedText","refreshedState","faRedo","value","onChange","event","target","Playground","MOOD","SERIOUS","FUN","Object","freeze","App","mood","toggleMood","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2bc5e3e5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/Header.css';\n\nexport default function Header(props) {\n  const { onClick, label } = props;\n\n  return (\n    <div className=\"header-box\">\n      <span\n        style={{\n          marginLeft: '16px',\n          maxWidth: '64px',\n          fontSize: '11px',\n        }}\n      >\n        I regret making this without a CSS library ðŸ˜¢\n      </span>\n      <button\n        className=\"toggle-button\"\n        type=\"button\"\n        onClick={onClick}\n      >\n        {label}\n        {' >'}\n      </button>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/Content.css';\n\nexport default function Content(props) {\n  const { content } = props;\n\n  return (\n    <div className=\"content-box\">\n      {content}\n    </div>\n  );\n}\n\nContent.propTypes = {\n  content: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport '../css/Footer.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nexport default function Footer() {\n  return (\n    <div className=\"footer-box\">\n      <div className=\"footer-item\">\n        <a\n          href=\"https://www.linkedin.com/in/wei-liang-yan-ab0299185/\"\n        >\n          <FontAwesomeIcon\n            icon={faLinkedin}\n            size=\"2x\"\n            style={{\n              color: 'white',\n            }}\n          />\n        </a>\n      </div>\n      <div className=\"footer-item\">\n        <a\n          href=\"https://www.github.com/uberSaiyan\"\n        >\n          <FontAwesomeIcon\n            icon={faGithub}\n            size=\"2x\"\n            style={{\n              color: 'white',\n            }}\n          />\n        </a>\n      </div>\n      <div className=\"footer-item\">\n        <a href=\"mailto:yanwl.note@gmail.com\">\n          <FontAwesomeIcon\n            icon={faEnvelope}\n            size=\"2x\"\n            style={{\n              color: 'white',\n            }}\n          />\n        </a>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport '../css/InfoPage.css';\n\nexport default function InfoPage() {\n  return (\n    <>\n      <img\n        className=\"profile-pic\"\n        src=\"https://image.shutterstock.com/z/stock-vector-work-in-progress-sign-270781412.jpg\"\n        alt=\"profile-pic\"\n      />\n      <h1 className=\"big-text\">Yan Wei Liang</h1>\n      <p className=\"info-text\">Computer Science Undergraduate</p>\n      <p className=\"info-text\">Passionate about web development</p>\n      <hr className=\"section-separator\" />\n      <h1 className=\"big-text\">Projects</h1>\n      <a href=\"https://github.com/SoilingRogue/Orbital2019\">\n        <h2>Basic Instinct | Orbital 2019 Project</h2>\n      </a>\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n        }}\n      >\n        <iframe\n          title=\"Basic Instinct\"\n          width=\"426\"\n          height=\"240\"\n          src=\"https://www.youtube.com/embed/lS5H-fB6O4o\"\n          style={{\n            flexShrink: 0,\n            marginBottom: '16px',\n            marginLeft: '32px',\n            marginRight: '32px',\n          }}\n        />\n        <p\n          style={{\n            maxWidth: '400px',\n            fontSize: '20px',\n          }}\n        >\n          My friend and I made this game in year 1 of our undergraduate studies.\n          We learnt the basics of Unity and developed it in 3 months.\n          Eventually, we obtained the highest level of achievement - Apollo.\n          I felt that the learning curve at the beginning of this project was\n          incredibly steep, because I had no prior experience working with game engines\n          and I was not familiar with C# as well.\n        </p>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function HighlightableText(props) {\n  const {\n    children, start, end, color,\n  } = props;\n  const left = children.substring(0, start);\n  const highlighted = children.substring(start, end + 1);\n  const right = children.substring(end + 1);\n\n  return (\n    <div>\n      <span>\n        {left}\n      </span>\n      <span\n        style={{\n          color,\n        }}\n      >\n        {highlighted}\n      </span>\n      <span>\n        {right}\n      </span>\n    </div>\n  );\n}\n\nHighlightableText.propTypes = {\n  children: PropTypes.string.isRequired,\n  start: PropTypes.number.isRequired,\n  end: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport '../css/ToggleButton.css';\nimport PropTypes from 'prop-types';\n\nexport default class ToggleButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      positionIsLeft: true,\n    };\n  }\n\n  render() {\n    const { onClick, leftText, rightText } = this.props;\n    const { positionIsLeft } = this.state;\n\n    return (\n      <button\n        className=\"slider-button\"\n        type=\"button\"\n        onClick={() => {\n          this.setState({ positionIsLeft: !positionIsLeft });\n          onClick();\n        }}\n      >\n        <span\n          style={{\n            width: '100%',\n            textAlign: 'center',\n            order: positionIsLeft ? 2 : 1,\n            overflowX: 'hidden',\n            maxWidth: '100px',\n            fontSize: '12px',\n          }}\n        >\n          {positionIsLeft ? leftText : rightText}\n        </span>\n        <svg\n          height=\"16\"\n          width=\"16\"\n          style={{\n            order: positionIsLeft ? 1 : 2,\n          }}\n        >\n          <circle\n            cx=\"8\"\n            cy=\"8\"\n            r=\"8\"\n            stroke=\"white\"\n            strokeWidth=\"1\"\n            fill=\"silver\"\n          />\n        </svg>\n      </button>\n    );\n  }\n}\n\nToggleButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  leftText: PropTypes.string.isRequired,\n  rightText: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport '../css/TypingGame.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRedo } from '@fortawesome/free-solid-svg-icons';\nimport HighlightableText from './HighlightableText';\nimport ToggleButton from './ToggleButton';\n\nconst TEXT_LIST = [\n  'The quick brown fox jumps over the lazy dog.',\n  'When they first built the University of California at Irvine they just put the buildings in. '\n  + 'They did not put any sidewalks, they just planted grass. Perl is just that kind of language. '\n  + 'It is not designed from first principles. Perl is those sidewalks in the grass.',\n  'The computer programmer is a creator of universes for which he alone is the lawgiver. '\n  + 'No playwright, no stage director, no emperor, however powerful, has ever exercised such '\n  + 'absolute authority to arrange a stage or field of battle and to command such unswervingly dutiful actors or troops.',\n  'Programs must be written for people to read, and only incidentally for machines to execute.',\n  'Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.',\n  'Programming today is a race between software engineers striving to build bigger and better idiot-proof programs, '\n  + 'and the Universe trying to produce bigger and better idiots. So far, the Universe is winning.',\n  'Give a man a program, frustrate him for a day. Teach a man to program, frustrate him for a lifetime.',\n  'Everyone knows that debugging is twice as hard as writing a program in the first place. '\n  + 'So if you\\'re as clever as you can be when you write it, how will you ever debug it?',\n  'A computer is like a violin. You can imagine a novice trying first a phonograph and then a violin. '\n  + 'The latter, he says, sounds terrible. That is the argument we have heard from our humanists and most of our computer scientists. '\n  + 'Computer programs are good, they say, for particular purposes, but they aren\\'t flexible. Neither is a violin, or a typewriter, until you learn how to use it.',\n  'Talk is cheap. Show me the code.',\n];\n\nfunction capitalize(word) {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n}\n\nfunction getRandomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getText() {\n  return TEXT_LIST[getRandomInteger(0, TEXT_LIST.length - 1)];\n}\n\nfunction getNewText(oldText) {\n  const newText = getText();\n  if (newText !== oldText) {\n    return newText;\n  }\n  return getNewText(oldText);\n}\n\nexport default class TypingGame extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isPlaying: true,\n      index: 0,\n      text: '',\n      words: [],\n      input: '',\n      start: 0,\n      end: 0,\n      timerOn: false,\n      timerStart: 0,\n      timerEnd: 0,\n      isCapitalized: false,\n      normalText: '',\n    };\n  }\n\n  componentDidMount() {\n    const text = getText();\n    const words = text.split(' ');\n    const end = words[0].length;\n    this.setState({\n      text,\n      words,\n      end,\n      normalText: text,\n    });\n  }\n\n  componentDidUpdate() {\n    const { input } = this.state;\n    if (input.trimLeft().includes(' ')) {\n      this.checkCorrect();\n    }\n  }\n\n  refreshedState() {\n    const { normalText, isCapitalized } = this.state;\n    let newText = getNewText(normalText);\n    const newNormalText = newText;\n    let newWords = newText.split(' ');\n    const newEnd = newWords[0].length;\n    if (isCapitalized) {\n      newWords = newWords.map((word) => capitalize(word));\n      newText = newWords.join(' ');\n    }\n    return {\n      ...this.state,\n      isPlaying: true,\n      index: 0,\n      input: '',\n      start: 0,\n      timerOn: false,\n      timerStart: 0,\n      timerEnd: 0,\n      text: newText,\n      words: newWords,\n      end: newEnd,\n      normalText: newNormalText,\n    };\n  }\n\n  checkCorrect() {\n    const {\n      index, words, input, end,\n    } = this.state;\n    const isCorrect = input.trimRight() === words[index];\n    if (isCorrect) {\n      if (index === (words.length - 1)) {\n        // Don't advance index, clear input and end timer\n        this.setState({\n          isPlaying: false,\n          input: '',\n          timerEnd: Date.now(),\n        });\n      } else {\n        // Clear input and advance index\n        this.setState({\n          index: index + 1,\n          input: '',\n          start: end + 1,\n          end: end + 1 + words[index + 1].length,\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      isPlaying, text, words, input, start, end, timerOn, timerStart, timerEnd, isCapitalized,\n      normalText,\n    } = this.state;\n\n    return (\n      <div className=\"game-box\">\n        <div className=\"reset-button-box\">\n          <ToggleButton\n            leftText=\"Capitalize\"\n            rightText=\"Normal\"\n            onClick={() => {\n              if (!isCapitalized) {\n                const capitalizedWords = words.map((word) => capitalize(word));\n                const capitalizedText = capitalizedWords.join(' ');\n                this.setState({\n                  isCapitalized: !isCapitalized,\n                  words: capitalizedWords,\n                  text: capitalizedText,\n                });\n              } else {\n                this.setState({\n                  isCapitalized: !isCapitalized,\n                  text: normalText,\n                  words: normalText.split(' '),\n                });\n              }\n            }}\n          />\n          <button\n            className=\"reset-button\"\n            type=\"button\"\n            onClick={() => this.setState(this.refreshedState())}\n          >\n            <FontAwesomeIcon\n              icon={faRedo}\n            />\n          </button>\n        </div>\n        {isPlaying\n          ? (\n            <>\n              <p className=\"text\">\n                <HighlightableText\n                  start={start}\n                  end={end}\n                  color=\"red\"\n                >\n                  {text}\n                </HighlightableText>\n              </p>\n              <div className=\"input-box\">\n                <input\n                  type=\"text\"\n                  value={input}\n                  onChange={(event) => {\n                    if (!timerOn) {\n                      this.setState({\n                        timerOn: true,\n                        timerStart: Date.now(),\n                        input: event.target.value,\n                      });\n                    } else {\n                      this.setState({\n                        input: event.target.value,\n                      });\n                    }\n                  }}\n                />\n              </div>\n            </>\n          )\n          : (\n            <>\n              <p className=\"text\">\n                {text}\n              </p>\n              <div className=\"stats-text-box\">\n                <span>\n                  Time taken:\n                  {' '}\n                  {(timerEnd - timerStart) / 1000}\n                  {' seconds'}\n                </span>\n                <span>\n                  Word count:\n                  {' '}\n                  {words.length}\n                </span>\n                <span>\n                  Words per minute:\n                  {' '}\n                  {Math.floor((60 / ((timerEnd - timerStart) / 1000)) * words.length)}\n                </span>\n              </div>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport TypingGame from './TypingGame';\n\nexport default function Playground() {\n  return (\n    <TypingGame />\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Content from './components/Content';\nimport Footer from './components/Footer';\nimport InfoPage from './components/InfoPage';\nimport Playground from './components/Playground';\n\nconst MOOD = {\n  SERIOUS: 0,\n  FUN: 1,\n};\nObject.freeze(MOOD);\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      mood: MOOD.SERIOUS,\n    };\n  }\n\n  toggleMood() {\n    const { mood } = this.state;\n    if (mood === MOOD.SERIOUS) {\n      this.setState({\n        mood: MOOD.FUN,\n      });\n    } else {\n      this.setState({\n        mood: MOOD.SERIOUS,\n      });\n    }\n  }\n\n  render() {\n    const { mood } = this.state;\n    const content = mood === MOOD.SERIOUS ? (\n\n      <InfoPage />\n\n    ) : <Playground />;\n    const label = mood === MOOD.SERIOUS ? 'Playground' : 'About';\n\n    return (\n      <div className=\"layout\">\n        <div className=\"header\">\n          <Header onClick={() => this.toggleMood()} label={label} />\n        </div>\n        <div className=\"content\">\n          <Content content={content} />\n        </div>\n        <div className=\"footer\">\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-abel';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}